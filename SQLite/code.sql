CREATE TABLE Typesofusers (
Typeid INTEGER PRIMARY KEY,
instrument_id VARCHAR(100) NOT NULL,
FOREIGN KEY (Typeid) REFERENCES users(Typeid) 
ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE users (
user_id INTEGER PRIMARY KEY,
Typeid INTEGER NOT NULL,
FID VARCHAR(100) NOT NULL,
data_rith VARCHAR(100) NOT NULL,
phone VARCHAR(100) NOT NULL,
FOREIGN KEY (Typeid) REFERENCES Typesofusers(Typeid) 
ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE website (
website_id INTEGER PRIMARY KEY,
user_id INTEGER NOT NULL,
discounts VARCHAR(100) NOT NULL,
communications VARCHAR(100) NOT NULL,
catalog VARCHAR(100) NOT NULL,
FOREIGN KEY (user_id) REFERENCES users(user_id) 
ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE list_instruments (
list_instrument_id INTEGER PRIMARY KEY,
instrument_id INTEGER NOT NULL,
order_id INTEGER NOT NULL,
count1 INTEGER NOT NULL,
FOREIGN KEY (instrument_id) REFERENCES instruments(instrument_id) 
ON DELETE SET NULL ON UPDATE NO ACTION,
FOREIGN KEY (order_id) REFERENCES order1(order_id) 
ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE instruments (
instrument_id INTEGER PRIMARY KEY,
name VARCHAR(100) NOT NULL,
condition VARCHAR(100) NOT NULL,
price VARCHAR(100) NOT NULL,
discounts VARCHAR(100) NOT NULL
);

CREATE TABLE reviews (
reviews_id INTEGER PRIMARY KEY,
instrument_id INTEGER NOT NULL,
order_id INTEGER NOT NULL,
date1 VARCHAR(100) NOT NULL,
rating INTEGER NOT NULL,
comments VARCHAR(100) NOT NULL,
FOREIGN KEY (instrument_id) REFERENCES instruments(instrument_id) 
ON DELETE SET NULL ON UPDATE NO ACTION,
FOREIGN KEY (order_id) REFERENCES order1(order_id) 
ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE order1 (
order_id INTEGER PRIMARY KEY,
user_id INTEGER NOT NULL,
total_cost VARCHAR(100) NOT NULL,
date1 VARCHAR(100) NOT NULL,
completed VARCHAR(100) NOT NULL,
FOREIGN KEY (user_id) REFERENCES users(user_id) 
ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE factory (
factory_id INTEGER PRIMARY KEY,
order_id INTEGER NOT NULL,
manager_id INTEGER NOT NULL,
manufacturer VARCHAR(100) NOT NULL,
price VARCHAR(100) NOT NULL,
FOREIGN KEY (order_id) REFERENCES order1(order_id) 
ON DELETE SET NULL ON UPDATE NO ACTION,
FOREIGN KEY (manager_id) REFERENCES users(user_id) 
ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE deliviry_adres (
city INTEGER PRIMARY KEY,
flat VARCHAR(100) NOT NULL,
district VARCHAR(100) NOT NULL,
street VARCHAR(100) NOT NULL
);

CREATE TABLE payment (
payment_id INTEGER PRIMARY KEY,
order_id INTEGER NOT NULL,
data_payment VARCHAR(100) NOT NULL,
FOREIGN KEY (order_id) REFERENCES order1(order_id) 
ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE shop (
shop_id INTEGER PRIMARY KEY,
instrument_id INTEGER NOT NULL,
name VARCHAR(100) NOT NULL,
FOREIGN KEY (instrument_id) REFERENCES instruments(instrument_id) 
ON DELETE SET NULL ON UPDATE NO ACTION
);




